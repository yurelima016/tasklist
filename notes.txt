----------------------------------------
Principais funções do sistema

adicionar task
editar task
deletar task

Funções auxiliares

botão de opções
créditos do criado da página
----------------------------------------

Descrevendo funções de forma téncnica

Para realizar qualquer função no sistema primeiramente tem que clicar no botão de opções para mostrar possiveis opções, inicialmente a unica opção que vai estar habilitada será a de criar task, pois não terá nenhuma task para editar ou deletar.

Ao clicar no botão de criar task, o modal de criação de task irá aparecer e o "background" do sistema ficará escurecido, dando destaque para o modal.

Com o modal aberto o usuário poderá digitar o titulo e descrição da task, e poderá definir tambem a prioridade da task. Para finalizar o modal possui dois botões de ação, o de "Salvar" e "Cancelar".

Se ele clicar em cancelar o modal irá fechar e o "background" irá ficar claro novamente e nenhuma task será adicionada.
Se clicar em salvar o modal irá fechar, o "background" voltará a ficar claro mas uma task será adicionada com os valores digitados pelo usuário.

Com ao menos uma task criada as outras opçoes serão viaveis, mas a task deve ser selecionada para que o botão seja habilitado.

Ao selecionar a task o botão de editar e deletar será habilitado.

Se clicar no botão de editar o modal será aberto novamente, o "background" ficará escuro, mas os campos ja virão com os valores da task, sendo possivel de edita-los.

Se clicar no botão de deletar será aberto um alerta para confirmação do usuário se ele realmente deseja deletar a task.

No rodapé da página tem o nome do criador da página que ao ser clicado, redirecionará a página para o github do próprio.








// Enable or disable buttons
function enableEditAndDeleteButtons(isEnabled){
    editTask.disabled = !isEnabled;
    deleteTask.disabled = !isEnabled;
}

// Set overlay and modal state
function overlayAndModalState(isActive){
    if (isActive === true){
        modalOverlay.style.display = 'none';
        modal.style.display = 'none';
    }
    else{
        modalOverlay.style.display = 'block';
        modal.style.display = 'block';
    }
}

// Open modal for create a new task
function openCreateTaskModal(){
    overlayAndModalState(false);
    modalTitle.innerText = 'Create New Task';
    taskForm.reset();

}

// Open modal for edit a task
function openEditTaskModal(selectedTaskCard){
    overlayAndModalState(false);
    modalTitle.innerText = 'Edit Task';
    taskForm.reset();

    taskForm.querySelector('#title').value = selectedTaskCard.querySelector('.task-title').innerText;
    taskForm.querySelector('#description').value = selectedTaskCard.querySelector('.task-description').innerText;
    const taskPriority = selectedTaskCard.querySelector('.taskPriority span').innerText.toLowerCase();
    taskForm.querySelectorAll('input[name="priority"]').forEach(input => {
        input.checked = (input.value === taskPriority);
    });
}

// Open modal for view a task
function openViewTaskModal(){
    overlayAndModalState(false);
    modalTitle.innerText = 'View Task';
    taskForm.reset();

    taskForm.querySelector('#title').value = selectedTaskCard.querySelector('.task-title').innerText;
    taskForm.querySelector('#description').value = selectedTaskCard.querySelector('.task-description').innerText;
    const taskPriority = selectedTaskCard.querySelector('.taskPriority span').innerText.toLowerCase();
    taskForm.querySelectorAll('input[name="priority"]').forEach(input => {
        input.checked = (input.value === taskPriority);
    });

    document.getElementById('title').disabled = true;
    document.getElementById('description').disabled = true;
    document.querySelectorAll('input[name="priority"]').forEach(input => {
        if (input.value !== taskPriority){
            input.disabled = true;
        }
    });

    document.getElementById('saveBtn').disabled = true;
    document.getElementById('cancelBtn').disabled = true;
}

// Select a task card
function handleTaskCardClick(event){
    const taskCard = event.target.closest('.task-card');
    if (taskCard){
        document.querySelectorAll('.taskCard').forEach(card => card.classList.remove('selected'));
        taskCard.classList.add('selected');

        enableEditAndDeleteButtons(false);
    }
}

function githubRedirect(){
    window.open('https://github.com/yurelima016');
}